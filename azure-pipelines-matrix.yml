# https://aka.ms/yaml

trigger:
 branches:
   include:
    - master
    - features/*
    - feature/*
    - releases/*
 paths:
    include:
      - src/*

jobs:

- job:

  strategy:
    matrix:
      linux:
        imageName: 'ubuntu-latest'
      mac:
        imageName: 'macos-latest'
      windows2017:
        imageName: 'vs2017-win2016'
      windows2019:
        imageName: 'win2019'
    maxParallel: 4
  variables:
    manualOut: '$(Build.ArtifactStagingDirectory)\packManual'
    taskOut: '$(Build.ArtifactStagingDirectory)\packTask'
  pool:
    vmImage: $(imageName)
  
  displayName: Build
  condition: succeeded()
  steps:

  - task: DotNetCoreCLI@2
    displayName: 'dotnet restore'
    inputs:
      command: 'restore'
      projects: '**/*.csproj'
      feedsToUse: 'select'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet build'
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '-c Release'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet test'
    inputs:
      command: 'test'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'netcore pack task'
    inputs:
      command: 'pack'
      packagesToPack: '**/*.csproj'
      configuration: 'Release'
      packDirectory: '$(taskOut)'
      versioningScheme: 'off'
      buildProperties: 'IncludeSymbols=True;PackAsTool=True;SymbolPackageFormat=snupkg;VersionSuffix=task;VersionPrefix=9.8.7'
      verbosityPack: 'Minimal'


  - task: PowerShell@2
    displayName: dotnet pack manual
    inputs:
      targetType: 'inline'
      script: |
        mkdir $(manualOut)
        & dotnet pack $(Build.SourcesDirectory)\src\App2\App2.csproj -c Release -o $(manualOut) /p:PackAsTool=true /p:VersionPrefix=5.6.7 /p:SymbolPackageFormat=snupkg /p:IncludeSymbols=True /p:VersionSuffix=manual

  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: 'drop/$(imageName)'
      targetPath: '$(Build.ArtifactStagingDirectory)'
